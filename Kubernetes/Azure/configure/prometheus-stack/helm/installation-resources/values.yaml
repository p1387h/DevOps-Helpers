grafana:
  # Overwrite this value when executing helm.
  adminPassword: null
alertmanager:
  alertmanagerSpec:
    replicas: 1
    # Try to place each pod on a different node.
    podAntiAffinity: soft
    # Storage definition for persistent data.
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: azurefile
          accessModes:
            - ReadWriteOnce
          volumeName: azurefile-alertmanager
          resources:
            requests:
              storage: 50Gi
prometheus:
  prometheusSpec:
    replicas: 1
    # Try to place each pod on a different node.
    podAntiAffinity: soft
    # Storage definition for persistent data.
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: azurefile
          accessModes:
            - ReadWriteOnce
          volumeName: azurefile-prometheus
          resources:
            requests:
              storage: 50Gi
    podMetadata:
      annotations:
        sidecar.istio.io/inject: "true" # Make istio inject a sidecar into prometheus pods.
        traffic.sidecar.istio.io/includeInboundPorts: ""   # Do not intercept any inbound ports.
        traffic.sidecar.istio.io/includeOutboundIPRanges: ""  # Do not intercept any outbound traffic.
        proxy.istio.io/config: |  # Configure an env variable `OUTPUT_CERTS` to write certificates to the given folder.
          proxyMetadata:
            OUTPUT_CERTS: /etc/istio-output-certs
        sidecar.istio.io/userVolume: '[{"name": "istio-certs", "emptyDir": {"medium":"Memory"}}]'  # Mount the shared volume.
        sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]'
    volumes:
      - name: istio-certs
        emptyDir:
          medium: Memory
    volumeMounts:
      # Mount the sidecar volume into prometheus to access the certificates.
      - mountPath: /etc/istio-certs
        name: istio-certs
    # Add custom prometheus scraping configurations.
    additionalScrapeConfigs:
      # Gather istio envoy metrics.
      - job_name: 'envoy-stats'
        metrics_path: /stats/prometheus
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_container_port_name]
          action: keep
          regex: '.*-envoy-prom'
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:15090
          target_label: __address__
        - action: labeldrop
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod_name
      # Gather application pod metrics.
      - job_name: 'kubernetes-pods-istio-secure'
        scheme: https
        tls_config:
          ca_file: /etc/istio-certs/root-cert.pem
          cert_file: /etc/istio-certs/cert-chain.pem
          key_file: /etc/istio-certs/key.pem
          insecure_skip_verify: true  # Prometheus does not support secure naming.
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        # Sidecar status annotation is added by sidecar injector and
        # istio_workload_mtls_ability can be specifically placed on a pod to indicate its ability to receive mtls traffic.
        - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_istio_mtls]
          action: keep
          regex: (([^;]+);([^;]*))|(([^;]*);(true))
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__]  # Only keep address that is host:port
          action: keep    # Otherwise an extra target with ':443' is added for https scheme.
          regex: ([^:]+):(\d+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod_name